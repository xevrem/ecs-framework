{"version":3,"sources":["Bag.js","Component.js","ComponentManager.js","ComponentMapper.js","Entity.js","EntityManager.js","SystemManager.js","TagManager.js","GroupManager.js","EcsInstance.js","EntitySystem.js","index.js"],"names":["Bag","capacity","__data","Array","__count","forEach","map","filter","reduce","index","value","length","grow","element","bag","i","add","get","_","compare","a","b","find","cur","indexOf","removeAt","item","undefined","size","Component","constructor","type","__owner","__type","ComponentManager","ecsInstance","__ecsInstance","__components","__nextTypeId","component","set","entity","id","owner","count","removeComponents","clear","ComponentMapper","componentManager","components","Entity","__id","EntityManager","__entities","__oldIds","__nextId","shift","push","SystemManager","__systems","system","registerComponent","componentTypes","initialize","loadContent","valid","hasComponent","addEntity","removeEntity","cleanSystem","TagManager","__tags","tag","Object","keys","key","GroupManager","__groups","group","hasOwnProperty","contains","values","remove","EcsInstance","entityManager","systemManager","tagManager","groupManager","__updating","__deleting","__delta","__lastTime","__elapsed","create","addComponent","removeComponent","resolve","deleteEntity","time","delta","performance","now","cleanUp","EntitySystem","preLoadContent","removed","updated","added","shouldProcess","begin","processEntities","end","entities","process","__componentTypes"],"mappings":";AAmBG,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,SAAA,EAnBUA,IAAAA,EAAAA,WAIgB,SAAA,IAAfC,IAAAA,EAAW,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAI,EAAA,KAAA,GAHlB,EAAA,KAAA,SAAA,IACC,EAAA,KAAA,UAAA,GAGHC,KAAAA,OAAS,IAAIC,MAAMF,GACnBG,KAAAA,QAAU,EAahB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,UAEgB,MAAA,WAAA,IAAA,EACR,OAAKF,EAAAA,KAAAA,QAAOG,QAAnB,MAAA,EAAA,aAHD,CAAA,IAAA,MAMY,MAAA,WAAA,IAAA,EACJ,OAAKH,EAAAA,KAAAA,QAAOI,IAAnB,MAAA,EAAA,aAPD,CAAA,IAAA,SAUe,MAAA,WAAA,IAAA,EACP,OAAKJ,EAAAA,KAAAA,QAAOK,OAAnB,MAAA,EAAA,aAXD,CAAA,IAAA,SAce,MAAA,WAAA,IAAA,EACP,OAAKL,EAAAA,KAAAA,QAAOM,OAAnB,MAAA,EAAA,aAfD,CAAA,IAAA,MAkBGC,MAAAA,SAAAA,GACK,OAAA,KAAKP,OAAOO,KAnBpB,CAAA,IAAA,MAsBGA,MAAAA,SAAAA,EAAOC,GACLD,OAAAA,EAAQ,EACH,MAELA,GAAS,KAAKP,OAAOS,OAClBC,KAAAA,KAAa,EAARH,GACDA,GAAS,KAAKL,UAClBA,KAAAA,QAAUK,EAAQ,GAEpBP,KAAAA,OAAOO,GAASC,EACdA,KAhCR,CAAA,IAAA,MAmCGG,MAAAA,SAAAA,GACE,KAAKT,SAAW,KAAKF,OAAOS,QACzBC,KAAAA,OAEFV,KAAAA,OAAO,KAAKE,SAAWS,EACvBT,KAAAA,YAxCN,CAAA,IAAA,WA2CQU,MAAAA,SAAAA,GACF,IAAA,IAAIC,EAAI,EAAGD,EAAIH,OAASI,EAAGA,IACzBC,KAAAA,IAAIF,EAAIG,IAAIF,MA7CpB,CAAA,IAAA,QAiDO,MAAA,WACDb,KAAAA,OAAS,KAAKA,OAAOI,IAAI,SAAAY,MACzBd,KAAAA,QAAU,IAnDhB,CAAA,IAAA,WAsDQS,MAAAA,SAAAA,GAASM,IAAAA,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,SAACC,EAAGC,GAAMD,OAAAA,IAAMC,GACnC,QAAE,KAAKnB,OAAOoB,KAAK,SAAAC,GAAOJ,OAAAA,EAAQN,EAASU,OAvDnD,CAAA,IAAA,SA0DMV,MAAAA,SAAAA,GACCJ,IAAAA,EAAQ,KAAKP,OAAOsB,QAAQX,GAC3B,OAAA,KAAKY,SAAShB,KA5DtB,CAAA,IAAA,WA+DQA,MAAAA,SAAAA,GACHA,GAAAA,EAAQ,KAAKP,OAAOS,QAAUF,GAAS,EAAG,CACtCiB,IAAAA,EAAO,KAAKxB,OAAOO,GAIlBiB,OAHFtB,KAAAA,UACAF,KAAAA,OAAOO,GAAS,KAAKP,OAAO,KAAKE,SACjCF,KAAAA,OAAO,KAAKE,cAAWuB,EACrBD,EAEA,OAAA,OAvEV,CAAA,IAAA,aA2EY,MAAA,WACNtB,KAAAA,UACCsB,IAAAA,EAAO,KAAKxB,OAAO,KAAKE,SAEvBsB,OADFxB,KAAAA,OAAO,KAAKE,cAAWuB,EACrBD,IA/ER,CAAA,IAAA,OAkFuC,MAAA,WAAnCE,IAAAA,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAAI,KAAK1B,OAAOS,OAAS,EAC9BT,KAAAA,OAAa,GAAA,OAAA,EAAA,KAAKA,QAAW,EAAA,IAAIC,MAAMyB,EAAO,KAAK1B,OAAOS,YAnFhE,CAAA,IAAA,WAVc,IAAA,WACN,OAAA,KAAKT,OAAOS,SASpB,CAAA,IAAA,UANa,IAAA,WACL,OAAiB,IAAjB,KAAKP,UAKb,CAAA,IAAA,QAFW,IAAA,WACH,OAAA,KAAKA,YACb,EAnBUJ,GAmBV,QAAA,IAAA;;ACjBgB,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,eAAA,EAFN6B,IAAAA,EAAAA,WAEM,SAAA,IAAA,EAAA,KAAA,GADP,EAAA,KAAA,UAAA,MACO,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OAUP,IAAA,WACD,OAAA,KAAKC,YAAYC,MAGjBrB,IAAAA,SAAAA,GACFoB,KAAAA,YAAYC,KAAOrB,IAfT,CAAA,IAAA,QAkBN,IAAA,WACF,OAAA,KAAKsB,SAGJtB,IAAAA,SAAAA,GACHsB,KAAAA,QAAUtB,KAvBA,CAAA,CAAA,IAAA,OAEA,IAAA,WACR,OAAA,KAAKuB,QAGEvB,IAAAA,SAAAA,GACTuB,KAAAA,OAASvB,MAPC,EAFNmB,GAEM,QAAA,UAAA,EAFNA,EAAAA,EAEK,UAAC;;ACsBhB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,sBAAA,EAxBH,IAAA,EAAA,QAAA,SAwBG,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAtBUK,IAAAA,EAAAA,WACCC,SAAAA,EAAAA,GAAa,EAAA,KAAA,GAClBC,KAAAA,cAAgBD,EAChBE,KAAAA,aAAe,IAAIrC,EAAJ,IACfsC,KAAAA,aAAe,EAkBrB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,oBAfiBC,MAAAA,SAAAA,GACVA,EAAUR,MAAQ,IACtBQ,EAAUR,KAAO,KAAKO,gBAEpBC,EAAUR,KAAO,KAAKM,aAAapC,cACS0B,IAA1C,KAAKU,aAAapB,IAAIsB,EAAUR,OAC7BM,KAAAA,aAAaG,IAAID,EAAUR,KAAM,IAAI/B,EAAJ,KAGnCqC,KAAAA,aAAaG,IAAID,EAAUR,KAAM,IAAI/B,EAAJ,OAMzC,CAAA,IAAA,eAEYyC,MAAAA,SAAAA,EAAQF,GACZ,OAAA,KAAKF,aAAapB,IAAIsB,EAAUR,MAAMd,IAAIwB,EAAOC,MAHzD,CAAA,IAAA,eAMYD,MAAAA,SAAAA,EAAQF,GACnBA,EAAUI,MAAQF,EAAOC,GACpBL,KAAAA,aAAapB,IAAIsB,EAAUR,MAAMS,IAAIC,EAAOC,GAAIH,KARtD,CAAA,IAAA,mBAWgBE,MAAAA,SAAAA,GACV,IAAA,IAAI1B,EAAI,EAAGA,EAAI,KAAKsB,aAAaO,MAAO7B,IACtCsB,KAAAA,aAAapB,IAAIF,GAAGyB,IAAIC,EAAOC,QAAIf,KAb3C,CAAA,IAAA,kBAiBeY,MAAAA,SAAAA,GACTF,KAAAA,aAAapB,IAAIsB,EAAUR,MAAMS,IAAID,EAAUI,WAAOhB,KAlB5D,CAAA,IAAA,eAqBYc,MAAAA,SAAAA,GACNI,KAAAA,iBAAiBJ,KAtBvB,CAAA,IAAA,eAyBYA,MAAAA,SAAAA,EAAQV,GACfA,OAAAA,EAAO,KAAKM,aAAapC,UACvBwC,EAAOC,GAAK,KAAKL,aAAapB,IAAIc,GAAM9B,eACS0B,IAA/C,KAAKU,aAAapB,IAAIc,GAAMd,IAAIwB,EAAOC,MA5BhD,CAAA,IAAA,UAoCS,MAAA,WACH,IAAA,IAAI3B,EAAI,EAAGA,EAAI,KAAKsB,aAAaO,MAAO7B,SACVY,IAA7B,KAAKU,aAAapB,IAAIF,IACnBsB,KAAAA,aAAapB,IAAIF,GAAG+B,UAvC9B,CAAA,IAAA,aAFgB,IAAA,WACR,OAAA,KAAKT,iBACb,EAtBUH,GAsBV,QAAA,iBAAA;;ACVA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,qBAAA,EAdUa,IAAAA,EAAAA,WACCR,SAAAA,EAAAA,EAAWJ,GAAa,EAAA,KAAA,GAC7BF,KAAAA,OAASM,EAAUR,KACnBK,KAAAA,cAAgBD,EAWtB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,MARGM,MAAAA,SAAAA,GACK,OAAA,KAAKL,cAAcY,iBAAiBC,WACxChC,IAAI,KAAKgB,QACThB,IAAIwB,EAAOC,OAKf,CAAA,CAAA,IAAA,MAFUX,MAAAA,SAAAA,EAAMU,EAAQN,GAChBA,OAAAA,EAAYa,iBAAiBC,WAAWhC,IAAIc,GAAMd,IAAIwB,EAAOC,QACrE,EAdUK,GAcV,QAAA,gBAAA;;ACPA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,EAPUG,IAAAA,EAAAA,WAOV,SAAA,IAAA,EAAA,KAAA,GANM,EAAA,KAAA,QAAC,GAMP,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,KALO,IAAA,WACC,OAAA,KAAKC,MAEPzC,IAAAA,SAAAA,GACAyC,KAAAA,KAAOzC,MACb,EAPUwC,GAOV,QAAA,OAAA;;ACgCYE,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,QAAAA,QAAAA,mBAAAA,EAvCf,IAAA,EAAA,QAAA,SACA,EAAA,QAAA,YAsCeA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EApCFA,IAAAA,EAAAA,WACCjB,SAAAA,EAAAA,GAAa,EAAA,KAAA,GAClBC,KAAAA,cAAgBD,EAChBkB,KAAAA,WAAa,IAAIrD,EAAJ,IACbsD,KAAAA,SAAW,GACXC,KAAAA,SAAW,EA+BLH,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SA5BJ,MAAA,WACDX,IAAAA,EAAS,IAAIS,EAAJ,OASRT,OAPH,KAAKa,SAAS3C,OAAS,EACzB8B,EAAOC,GAAK,KAAKY,SAASE,QAE1Bf,EAAOC,GAAK,KAAKa,WAGdF,KAAAA,WAAWb,IAAIC,EAAOC,GAAID,GACxBA,IAkBIW,CAAAA,IAAAA,iBAfI,MAAA,WACR,OAAA,KAAKC,WAAWT,QAcZQ,CAAAA,IAAAA,eAXAX,MAAAA,SAAAA,GACNa,KAAAA,SAASG,KAAKhB,EAAOC,IACrBW,KAAAA,WAAWb,IAAIC,EAAOC,QAAIf,KASpByB,CAAAA,IAAAA,UANH,MAAA,WACHE,KAAAA,SAAW,GACXD,KAAAA,WAAWP,YAILM,EApCFA,GAoCEA,QAAAA,cAAAA,EAAAA,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACYZ,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,mBAAA,EAnDUM,IAAAA,EAAAA,WAICvB,SAAAA,EAAAA,GAAa,EAAA,KAAA,GAHT,EAAA,KAAA,gBAAA,MACJ,EAAA,KAAA,YAAA,IAGLC,KAAAA,cAAgBD,EAChBwB,KAAAA,UAAY,GA6ClB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,YA1CSC,MAAAA,SAAAA,GAAWX,IAAY,IAAA,EAAA,KAAZA,EAAAA,UAAAA,OAAAA,EAAY,IAAA,MAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAZA,EAAY,EAAA,GAAA,UAAA,GAOxBW,OANPX,EAAW5C,QAAQ,SAAAkC,GACjB,EAAKH,cAAcY,iBAAiBa,kBAAkBtB,GACtDqB,EAAOE,eAAeL,KAAKlB,EAAUR,QAEvC6B,EAAOzB,YAAc,KAAKC,cACrBuB,KAAAA,UAAUF,KAAKG,GACbA,IAmCR,CAAA,IAAA,oBAhCmB,MAAA,WACbD,KAAAA,UAAUtD,QAAQ,SAAAuD,GAAUA,OAAAA,EAAOG,iBA+BzC,CAAA,IAAA,qBA5BoB,MAAA,WACdJ,KAAAA,UAAUtD,QAAQ,SAAAuD,GAAUA,OAAAA,EAAOI,kBA2BzC,CAAA,IAAA,UAxBOvB,MAAAA,SAAAA,GAAQ,IAAA,EAAA,KACVwB,GAAQ,EAEPN,KAAAA,UAAUtD,QAAQ,SAAAuD,GACrBK,GAAQ,EACRL,EAAOE,eAAezD,QAAQ,SAAA0B,GAC5BkC,EAAQA,GAAS,EAAK7B,cAAc8B,aAAazB,EAAQV,KAEvDkC,EACFL,EAAOO,UAAU1B,GAGjBmB,EAAOQ,aAAa3B,OAYzB,CAAA,IAAA,eAPYA,MAAAA,SAAAA,GACNkB,KAAAA,UAAUtD,QAAQ,SAAAuD,GAAUA,OAAAA,EAAOQ,aAAa3B,OAMtD,CAAA,IAAA,UAHS,MAAA,WACHkB,KAAAA,UAAUtD,QAAQ,SAAAuD,GAAUA,OAAAA,EAAOS,gBACnCV,KAAAA,UAAY,OAClB,EAnDUD,GAmDV,QAAA,cAAA;;AC5BA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,EAvBUY,IAAAA,EAAAA,WACG,SAAA,IAAA,EAAA,KAAA,GACPC,KAAAA,OAAS,GAqBf,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,iBAlBcC,MAAAA,SAAAA,GACN,OAAA,KAAKD,OAAOC,KAiBpB,CAAA,IAAA,YAdSA,MAAAA,SAAAA,EAAK/B,GACR8B,KAAAA,OAAOC,GAAO/B,IAapB,CAAA,IAAA,UAVOA,MAAAA,SAAAA,MAUP,CAAA,IAAA,eARYA,MAAAA,SAAAA,GAAQ,IAAA,EAAA,KACnBgC,OAAOC,KAAK,KAAKH,QAAQlE,QAAQ,SAAAsE,GAC3B,EAAKJ,OAAOI,KAASlC,UAAe,EAAK8B,OAAOI,OAMvD,CAAA,IAAA,UAFS,MAAA,WACHJ,KAAAA,OAAS,OACf,EAvBUD,GAuBV,QAAA,WAAA;;ACWA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,kBAAA,EAlCH,IAAA,EAAA,QAAA,SAkCG,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAhCUM,IAAAA,EAAAA,WACG,SAAA,IAAA,EAAA,KAAA,GACPC,KAAAA,SAAW,GA8BjB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,mBA3BgBC,MAAAA,SAAAA,EAAOrC,GACjB,KAAKoC,SAASE,eAAeD,KAC3BD,KAAAA,SAASC,GAAS,IAAI9E,EAAJ,KAGpB,KAAK6E,SAASC,GAAOE,SAASvC,IAC5BoC,KAAAA,SAASC,GAAO9D,IAAIyB,KAqB5B,CAAA,IAAA,WAjBQqC,MAAAA,SAAAA,GACA,OAAA,KAAKD,SAASC,KAgBtB,CAAA,IAAA,UAbOrC,MAAAA,SAAAA,MAaP,CAAA,IAAA,eAXYA,MAAAA,SAAAA,GACXgC,OAAOQ,OAAO,KAAKJ,UAAUxE,QAAQ,SAAAyE,GACnCA,EAAMI,OAAOzC,OAShB,CAAA,IAAA,UALS,MAAA,WAAA,IAAA,EAAA,KACRgC,OAAOC,KAAK,KAAKG,UAAUxE,QAAQ,SAAAsE,GACjC,EAAKE,SAASF,GAAK7B,eACZ,EAAK+B,SAASF,SAExB,EAhCUC,GAgCV,QAAA,aAAA;;ACRA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA,EA1BH,IAAA,EAAA,QAAA,mBACA,EAAA,QAAA,sBACA,EAAA,QAAA,mBACA,EAAA,QAAA,gBACA,EAAA,QAAA,kBAsBG,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EApBUO,IAAAA,EAAAA,WACG,SAAA,IAAA,EAAA,KAAA,GACPC,KAAAA,cAAgB,IAAIhC,EAAJ,cAAkB,MAClCJ,KAAAA,iBAAmB,IAAId,EAAJ,iBAAqB,MACxCmD,KAAAA,cAAgB,IAAI3B,EAAJ,cAAkB,MAClC4B,KAAAA,WAAa,IAAIhB,EAAJ,WACbiB,KAAAA,aAAe,IAAIX,EAAJ,aACfY,KAAAA,WAAa,GACbC,KAAAA,WAAa,GACbC,KAAAA,QAAU,EACVC,KAAAA,WAAa,EACbC,KAAAA,UAAY,EASlB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SAEQ,MAAA,WACA,OAAA,KAAKR,cAAcS,WAH3B,CAAA,IAAA,eAMYpD,MAAAA,SAAAA,EAAQF,GACdS,KAAAA,iBAAiB8C,aAAarD,EAAQF,KAP5C,CAAA,IAAA,kBAUeA,MAAAA,SAAAA,GACTS,KAAAA,iBAAiB+C,gBAAgBxD,KAXvC,CAAA,IAAA,eAcYE,MAAAA,SAAAA,EAAQV,GACZ,OAAA,KAAKiB,iBAAiBkB,aAAazB,EAAQV,KAfnD,CAAA,IAAA,UAkBOU,MAAAA,SAAAA,GACFA,GAAQ,KAAK+C,WAAW/B,KAAKhB,KAnBlC,CAAA,IAAA,eAsBYA,MAAAA,SAAAA,GACPA,GAAQ,KAAKgD,WAAWhC,KAAKhB,KAvBlC,CAAA,IAAA,kBA0BiB,MAAA,WAAA,IAAA,EAAA,KACZ,KAAK+C,WAAW7E,OAAS,IACtB6E,KAAAA,WAAWnF,QAAQ,SAAAoC,GAAU,OAAA,EAAK4C,cAAcW,QAAQvD,KACxD+C,KAAAA,WAAa,IAGhB,KAAKC,WAAW9E,OAAS,IACtB8E,KAAAA,WAAWpF,QAAQ,SAAAoC,GACtB,EAAK4C,cAAcY,aAAaxD,GAChC,EAAK6C,WAAWW,aAAaxD,GAC7B,EAAK8C,aAAaU,aAAaxD,GAC/B,EAAKO,iBAAiBiD,aAAaxD,GACnC,EAAK2C,cAAca,aAAaxD,KAE7BgD,KAAAA,WAAa,MAxCrB,CAAA,IAAA,aA4CUS,MAAAA,SAAAA,GACJR,KAAAA,QAAUQ,EAAO,KAAKP,WACtBC,KAAAA,WAAa,KAAKF,QAClBC,KAAAA,WAAaO,IA/CnB,CAAA,IAAA,gBAkDaC,MAAAA,SAAAA,GACPT,KAAAA,QAAUS,EACVP,KAAAA,WAAa,KAAKF,QAClBC,KAAAA,WAAaS,YAAYC,QArD/B,CAAA,IAAA,UAwDS,MAAA,WACHjB,KAAAA,cAAckB,UACdtD,KAAAA,iBAAiBsD,UACjBjB,KAAAA,cAAciB,UACdf,KAAAA,aAAae,UACbhB,KAAAA,WAAWgB,YA7DjB,CAAA,IAAA,QANU,IAAA,WACF,OAAA,KAAKZ,UAKb,CAAA,IAAA,UAFY,IAAA,WACJ,OAAA,KAAKE,cACb,EApBUT,GAoBV,QAAA,YAAA;;ACLA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,kBAAA,EArBH,IAAA,EAAA,QAAA,SAqBG,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAnBUoB,IAAAA,EAAAA,WAmBV,SAAA,IAAA,EAAA,KAAA,GAlBkB,EAAA,KAAA,mBAAA,IACN,EAAA,KAAA,aAAA,IAAIvG,EAAJ,KACG,EAAA,KAAA,gBAAA,MAgBf,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,cAEa,MAAA,WACPwG,KAAAA,eAAe,KAAKnD,cAH1B,CAAA,IAAA,eAMYZ,MAAAA,SAAAA,GACP,KAAKY,WAAW6B,OAAOzC,IAAS,KAAKgE,QAAQhE,KAPlD,CAAA,IAAA,YAUSA,MAAAA,SAAAA,GACH,KAAKY,WAAW2B,SAASvC,EAAQ,SAACrB,EAAGC,GAAMA,OAAAA,GAAKD,EAAEsB,KAAOrB,EAAEqB,KAIzDgE,KAAAA,QAAQjE,IAHRY,KAAAA,WAAWrC,IAAIyB,GACfkE,KAAAA,MAAMlE,MAbd,CAAA,IAAA,cAmBa,MAAA,WACP6D,KAAAA,QAAQ,KAAKjD,YACbA,KAAAA,WAAWP,UArBjB,CAAA,IAAA,aAwBY,MAAA,WACP,KAAK8D,kBACFC,KAAAA,QACAC,KAAAA,gBAAgB,KAAKzD,YACrB0D,KAAAA,SA5BR,CAAA,IAAA,kBAgCeC,MAAAA,SAAAA,GAAU,IAAA,EAAA,KACxBA,EAAS3G,QAAQ,SAAAoC,GACfA,GAAU,EAAKwE,QAAQxE,EAAQ,EAAKL,cAAc+D,WAlCrD,CAAA,IAAA,gBAsCe,MAAA,WACP,OAAA,IAvCR,CAAA,IAAA,aA2CY,MAAA,cA3CZ,CAAA,IAAA,iBA4Cca,MAAAA,SAAAA,MA5Cd,CAAA,IAAA,UA6COvE,MAAAA,SAAAA,MA7CP,CAAA,IAAA,QA8CKA,MAAAA,SAAAA,MA9CL,CAAA,IAAA,UA+COA,MAAAA,SAAAA,MA/CP,CAAA,IAAA,UAgDOuE,MAAAA,SAAAA,MAhDP,CAAA,IAAA,QAiDO,MAAA,cAjDP,CAAA,IAAA,MAkDK,MAAA,cAlDL,CAAA,IAAA,UAmDOvE,MAAAA,SAAAA,MAnDP,CAAA,IAAA,cAdiB,IAAA,WACT,OAAA,KAAKL,eAGE1B,IAAAA,SAAAA,GACT0B,KAAAA,cAAgB1B,IAStB,CAAA,IAAA,iBANoB,IAAA,WACZ,OAAA,KAAKwG,kBAGKxG,IAAAA,SAAAA,GACZwG,KAAAA,iBAAmBxG,MACzB,EAnBU6F,GAmBV,QAAA,aAAA;;ACTY,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAZf,IAAA,EAAA,QAAA,SACA,EAAA,QAAA,eACA,EAAA,QAAA,sBACA,EAAA,QAAA,qBACA,EAAA,QAAA,iBACA,EAAA,QAAA,YACA,EAAA,QAAA,mBACA,EAAA,QAAA,kBACA,EAAA,QAAA,kBACA,EAAA,QAAA,mBACA,EAAA,QAAA,gBAEe,EAAA,CACbvG,IAAAA,EADa,IAEb6B,UAAAA,EAFa,UAGbK,iBAAAA,EAHa,iBAIba,gBAAAA,EAJa,gBAKboC,YAAAA,EALa,YAMbjC,OAAAA,EANa,OAObE,cAAAA,EAPa,cAQbmD,aAAAA,EARa,aASb3B,aAAAA,EATa,aAUblB,cAAAA,EAVa,cAWbY,WAAAA,EAAAA,YAXa,QAAA,QAAA","file":"index.js","sourceRoot":"../src","sourcesContent":["export class Bag {\n  __data = [];\n  __count = 0;\n\n  constructor(capacity = 16) {\n    this.__data = new Array(capacity);\n    this.__count = 0;\n  }\n\n  get capacity() {\n    return this.__data.length;\n  }\n\n  get isEmpty() {\n    return this.__count === 0;\n  }\n\n  get count() {\n    return this.__count;\n  }\n\n  forEach(...args) {\n    return this.__data.forEach(...args);\n  }\n\n  map(...args) {\n    return this.__data.map(...args);\n  }\n\n  filter(...args) {\n    return this.__data.filter(...args);\n  }\n\n  reduce(...args) {\n    return this.__data.reduce(...args);\n  }\n\n  get(index) {\n    return this.__data[index];\n  }\n\n  set(index, value) {\n    if (index < 0) {\n      return null;\n    }\n    if (index >= this.__data.length) {\n      this.grow(index * 2);\n    } else if (index >= this.__count) {\n      this.__count = index + 1;\n    }\n    this.__data[index] = value;\n    return value;\n  }\n\n  add(element) {\n    if (this.__count >= this.__data.length) {\n      this.grow();\n    }\n    this.__data[this.__count] = element;\n    this.__count++;\n  }\n\n  addRange(bag) {\n    for (let i = 0; bag.length > i; i++) {\n      this.add(bag.get(i));\n    }\n  }\n\n  clear() {\n    this.__data = this.__data.map(_ => undefined);\n    this.__count = 0;\n  }\n\n  contains(element, compare = (a, b) => a === b) {\n    return !!this.__data.find(cur => compare(element, cur));\n  }\n\n  remove(element) {\n    const index = this.__data.indexOf(element);\n    return this.removeAt(index);\n  }\n\n  removeAt(index) {\n    if (index < this.__data.length && index >= 0) {\n      const item = this.__data[index];\n      this.__count--;\n      this.__data[index] = this.__data[this.__count];\n      this.__data[this.__count] = undefined;\n      return item;\n    } else {\n      return null;\n    }\n  }\n\n  removeLast() {\n    this.__count--;\n    const item = this.__data[this.__count];\n    this.__data[this.__count] = undefined;\n    return item;\n  }\n\n  grow(size = 2 * this.__data.length + 1) {\n    this.__data = [...this.__data, ...new Array(size - this.__data.length)];\n  }\n}\n","export class Component {\n  __owner = null;\n  static __type = -1;\n\n  static get type(){\n    return this.__type;\n  }\n\n  static set type(value){\n    this.__type = value;\n  }\n\n  get type(){\n    return this.constructor.type;\n  }\n\n  set type(value){\n    this.constructor.type = value;\n  }\n\n  get owner(){\n    return this.__owner;\n  }\n\n  set owner(value){\n    this.__owner = value;\n  }\n}\n","import { Bag } from './Bag';\n\nexport class ComponentManager {\n  constructor(ecsInstance) {\n    this.__ecsInstance = ecsInstance;\n    this.__components = new Bag();\n    this.__nextTypeId = 0;\n  }\n\n  registerComponent(component) {\n    if (!(component.type >= 0)) {\n      component.type = this.__nextTypeId++;\n    }\n    if (component.type < this.__components.capacity) {\n      if (this.__components.get(component.type) === undefined) {\n        this.__components.set(component.type, new Bag());\n      }\n    } else {\n      this.__components.set(component.type, new Bag());\n    }\n  }\n\n  get components() {\n    return this.__components;\n  }\n\n  getComponent(entity, component) {\n    return this.__components.get(component.type).get(entity.id);\n  }\n\n  addComponent(entity, component) {\n    component.owner = entity.id;\n    this.__components.get(component.type).set(entity.id, component);\n  }\n\n  removeComponents(entity) {\n    for (let i = 0; i < this.__components.count; i++) {\n      this.__components.get(i).set(entity.id, undefined);\n    }\n  }\n\n  removeComponent(component) {\n    this.__components.get(component.type).set(component.owner, undefined);\n  }\n\n  deleteEntity(entity) {\n    this.removeComponents(entity);\n  }\n\n  hasComponent(entity, type) {\n    if (type < this.__components.capacity) {\n      if (entity.id < this.__components.get(type).capacity) {\n        if (this.__components.get(type).get(entity.id) !== undefined) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  cleanUp() {\n    for (let i = 0; i < this.__components.count; i++) {\n      if (this.__components.get(i) !== undefined) {\n        this.__components.get(i).clear();\n      }\n    }\n  }\n}\n","export class ComponentMapper {\n  constructor(component, ecsInstance) {\n    this.__type = component.type;\n    this.__ecsInstance = ecsInstance;\n  }\n\n  get(entity) {\n    return this.__ecsInstance.componentManager.components\n      .get(this.__type)\n      .get(entity.id);\n  }\n\n  static get(type, entity, ecsInstance) {\n    return ecsInstance.componentManager.components.get(type).get(entity.id);\n  }\n}\n","export class Entity {\n  __id = -1;\n  get id(){\n    return this.__id;\n  }\n  set id(value){\n    this.__id = value;\n  }\n}\n","import { Bag } from './Bag';\nimport { Entity } from './Entity';\n\nexport class EntityManager {\n  constructor(ecsInstance) {\n    this.__ecsInstance = ecsInstance;\n    this.__entities = new Bag();\n    this.__oldIds = [];\n    this.__nextId = 0;\n  }\n\n  create() {\n    const entity = new Entity();\n    //re-use old IDs first\n    if (this.__oldIds.length > 0) {\n      entity.id = this.__oldIds.shift();\n    } else {\n      entity.id = this.__nextId++;\n    }\n    //add to entities, and return a reference\n    this.__entities.set(entity.id, entity);\n    return entity;\n  }\n\n  getEntityCount() {\n    return this.__entities.count;\n  }\n\n  deleteEntity(entity) {\n    this.__oldIds.push(entity.id);\n    this.__entities.set(entity.id, undefined);\n  }\n\n  cleanUp() {\n    this.__oldIds = [];\n    this.__entities.clear();\n  }\n}\n\nexport default EntityManager;\n","export class SystemManager {\n  __ecsInstance = null;\n  __systems = [];\n\n  constructor(ecsInstance) {\n    this.__ecsInstance = ecsInstance;\n    this.__systems = [];\n  }\n\n  setSystem(system, ...components) {\n    components.forEach(component => {\n      this.__ecsInstance.componentManager.registerComponent(component);\n      system.componentTypes.push(component.type);\n    });\n    system.ecsInstance = this.__ecsInstance;\n    this.__systems.push(system);\n    return system;\n  }\n\n  initializeSystems() {\n    this.__systems.forEach(system => system.initialize());\n  }\n\n  systemsLoadContent() {\n    this.__systems.forEach(system => system.loadContent());\n  }\n\n  resolve(entity) {\n    let valid = false;\n\n    this.__systems.forEach(system => {\n      valid = true;\n      system.componentTypes.forEach(type => {\n        valid = valid && this.__ecsInstance.hasComponent(entity, type);\n      });\n      if (valid) {\n        system.addEntity(entity);\n      }else{\n        // attempt to remove if we ever had it before\n        system.removeEntity(entity);\n      }\n    });\n  }\n\n  deleteEntity(entity) {\n    this.__systems.forEach(system => system.removeEntity(entity));\n  }\n\n  cleanUp() {\n    this.__systems.forEach(system => system.cleanSystem());\n    this.__systems = [];\n  }\n}\n","export class TagManager {\n  constructor() {\n    this.__tags = {};\n  }\n\n  getEntityByTag(tag) {\n    return this.__tags[tag];\n  }\n\n  tagEntity(tag, entity) {\n    this.__tags[tag] = entity;\n  }\n\n  refresh(entity) {}\n\n  deleteEntity(entity) {\n    Object.keys(this.__tags).forEach(key => {\n      if (this.__tags[key] === entity) delete this.__tags[key];\n    });\n  }\n\n  cleanUp() {\n    this.__tags = {};\n  }\n}\n","import { Bag } from 'Bag';\n\nexport class GroupManager {\n  constructor() {\n    this.__groups = {};\n  }\n\n  addEntityToGroup(group, entity) {\n    if (!this.__groups.hasOwnProperty(group)) {\n      this.__groups[group] = new Bag();\n    }\n\n    if (!this.__groups[group].contains(entity)) {\n      this.__groups[group].add(entity);\n    }\n  }\n\n  getGroup(group) {\n    return this.__groups[group];\n  }\n\n  refresh(entity) {}\n\n  deleteEntity(entity) {\n    Object.values(this.__groups).forEach(group => {\n      group.remove(entity);\n    });\n  }\n\n  cleanUp() {\n    Object.keys(this.__groups).forEach(key => {\n      this.__groups[key].clear();\n      delete this.__groups[key];\n    });\n  }\n}\n","import { EntityManager } from 'EntityManager';\nimport { ComponentManager } from 'ComponentManager';\nimport { SystemManager } from 'SystemManager';\nimport { TagManager } from 'TagManager';\nimport { GroupManager } from 'GroupManager';\n\nexport class EcsInstance {\n  constructor() {\n    this.entityManager = new EntityManager(this);\n    this.componentManager = new ComponentManager(this);\n    this.systemManager = new SystemManager(this);\n    this.tagManager = new TagManager();\n    this.groupManager = new GroupManager();\n    this.__updating = [];\n    this.__deleting = [];\n    this.__delta = 0;\n    this.__lastTime = 0;\n    this.__elapsed = 0;\n  }\n\n  get delta(){\n    return this.__delta;\n  }\n\n  get elapsed(){\n    return this.__elapsed;\n  }\n\n  create() {\n    return this.entityManager.create();\n  }\n\n  addComponent(entity, component) {\n    this.componentManager.addComponent(entity, component);\n  }\n\n  removeComponent(component) {\n    this.componentManager.removeComponent(component);\n  }\n\n  hasComponent(entity, type) {\n    return this.componentManager.hasComponent(entity, type);\n  }\n\n  resolve(entity) {\n    if (entity) this.__updating.push(entity);\n  }\n\n  deleteEntity(entity) {\n    if (entity) this.__deleting.push(entity);\n  }\n\n  resolveEntities() {\n    if (this.__updating.length > 0) {\n      this.__updating.forEach(entity => this.systemManager.resolve(entity));\n      this.__updating = [];\n    }\n\n    if (this.__deleting.length > 0) {\n      this.__deleting.forEach(entity => {\n        this.systemManager.deleteEntity(entity);\n        this.tagManager.deleteEntity(entity);\n        this.groupManager.deleteEntity(entity);\n        this.componentManager.deleteEntity(entity);\n        this.entityManager.deleteEntity(entity);\n      });\n      this.__deleting = [];\n    }\n  }\n\n  updateTime(time){\n    this.__delta = time - this.__lastTime;\n    this.__elapsed += this.__delta;\n    this.__lastTime = time;\n  }\n\n  updateByDelta(delta){\n    this.__delta = delta;\n    this.__elapsed += this.__delta;\n    this.__lastTime = performance.now();\n  }\n\n  cleanUp() {\n    this.entityManager.cleanUp();\n    this.componentManager.cleanUp();\n    this.systemManager.cleanUp();\n    this.groupManager.cleanUp();\n    this.tagManager.cleanUp();\n  }\n}\n","import { Bag } from './Bag';\n\nexport class EntitySystem {\n  __componentTypes = [];\n  __entities = new Bag();\n  __ecsInstance = null;\n\n  get ecsInstance() {\n    return this.__ecsInstance;\n  }\n\n  set ecsInstance(value) {\n    this.__ecsInstance = value;\n  }\n\n  get componentTypes() {\n    return this.__componentTypes;\n  }\n\n  set componentTypes(value) {\n    this.__componentTypes = value;\n  }\n\n  loadContent() {\n    this.preLoadContent(this.__entities);\n  }\n\n  removeEntity(entity) {\n    if (this.__entities.remove(entity)) this.removed(entity);\n  }\n\n  addEntity(entity) {\n    if (!this.__entities.contains(entity, (a, b) => b && a.id === b.id)) {\n      this.__entities.add(entity);\n      this.added(entity);\n    } else {\n      this.updated(entity);\n    }\n  }\n\n  cleanSystem() {\n    this.cleanUp(this.__entities);\n    this.__entities.clear();\n  }\n\n  processAll() {\n    if (this.shouldProcess()) {\n      this.begin();\n      this.processEntities(this.__entities);\n      this.end();\n    }\n  }\n\n  processEntities(entities) {\n    entities.forEach(entity => {\n      entity && this.process(entity, this.__ecsInstance.delta);\n    });\n  }\n\n  shouldProcess() {\n    return true;\n  }\n\n  //overloadable functions\n  initialize() {}\n  preLoadContent(entities) {}\n  removed(entity) {}\n  added(entity) {}\n  updated(entity) {}\n  cleanUp(entities) {}\n  begin() {}\n  end() {}\n  process(entity) {}\n}\n","import { Bag } from 'Bag';\nimport { Component } from 'Component';\nimport { ComponentManager } from 'ComponentManager';\nimport { ComponentMapper } from 'ComponentMapper';\nimport { EcsInstance } from 'EcsInstance';\nimport { Entity } from 'Entity';\nimport { EntityManager } from 'EntityManager';\nimport { EntitySystem } from 'EntitySystem';\nimport { GroupManager } from 'GroupManager';\nimport { SystemManager } from 'SystemManager';\nimport { TagManager } from 'TagManager';\n\nexport default {\n  Bag,\n  Component,\n  ComponentManager,\n  ComponentMapper,\n  EcsInstance,\n  Entity,\n  EntityManager,\n  EntitySystem,\n  GroupManager,\n  SystemManager,\n  TagManager\n};\n"]}